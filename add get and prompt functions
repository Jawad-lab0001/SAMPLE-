def promptStudent():
    """
    Prompts a User to enter details and maps to the student_detail dictionary

    Parameters:s
            student_name : Name of the student.
            student_number : The student's unique identifier.
            course_name : The student's course name.

    Returns:
        dict: A dictionary containing details entered by the user, including:
            - 'student_name': Name of the student.
            - 'student_number': The student's unique identifier.
            - 'course_name': The student's course name.

    Note:
        This function requires the implementation of error handling.
    """
    pass
student_list = {}
def promt_student(students,student_name, student_ID, Course):
    students = int(input("enter the number of students you want to add:"))
    for x in range(students):
       student_name =input("enter the students name :")
       student_ID =int(input("Enter the student ID :"))
       Course = input("enter the course :")
       student_list [students] = {
          student_name,
          student_ID,
          Course 
          }
       print((type(student_list)))
       if student_list != student_name != student_ID != Course:
           print( "Student has been added:","Student name:", {student_name}, "Student ID:",  {student_ID}, "Course:", {Course})
       else:
        print("student not added")
        

promt_student("students","student_name", "student_ID", "Course")
def getStudent(student_number):
    '''
    Description: This function searches the txt file from the /Student_Records for a student using the student_number argument from the student_detail (dict).
    
    Args:
        student_number (str): The number of the student.
    
    Returns:
        student_detail (dict): A dictionary containing the following key-value pairs:
            - 'student_name': The name of the student.
            - 'student_number': The student number.
            - 'course_name': The name of the course.
    
    Conditions:
        The use of error handling routine is compulsory.
    '''
    pass
def getStudent(student_number):
    Student_ID = input("enter the students ID to retrive information: ")
    if Student_ID in student_number:
        return student_number[Student_ID]
    else:
        print("Student not found")

getStudent("students")
def deleteStudent(Student_number):
    Student_ID = (input("enter the  students ID number: "))
    if Student_ID in Student_number:
        del Student_number[Student_ID]
        print(f"the student witht the ID {Student_ID} has been deleted")
    else:
        print(f"{Student_ID} error Not found")



deleteStudent("Student_number")
def addStudent(student_detail):
    '''
    Description: This function accepts students detail and writes to file
    Args:
        student_detail (dict): A dictionary containing the following key-value pairs:
            - 'student_name': The name of the student.
            - 'student_number': The student number.
            - 'course_name': The name of the course.
    
    Returns:
        None. Prints a statement confirming that the file was written.
    
    Conditions:
        The use of error handling routine is compulsory.
    '''
    pass
student_list = {}
def add_student(students,student_name, student_ID, Course):
    students = int(input("enter the number of students you want to add:"))
    for x in range(students):
       student_name =input("enter the students name :")
       student_ID =int(input("Enter the student ID :"))
       Course = input("enter the course :")
       student_list [students] = {
          student_name,
          student_ID,
          Course 
          }
       print((type(student_list)))
       if student_list != student_name != student_ID != Course:
           print( "Student has been added:","Student name:", {student_name}, "Student ID:",  {student_ID}, "Course:", {Course})
       else:
        print("student not added")


add_student("students","student_name", "student_ID", "Course")
